version: '3.8'

services:
  postgres:
    image: postgres:16.2
    environment:
      POSTGRES_DB: myappdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d myappdb"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    networks:
      - app-network

  pgvector:
    image: ankane/pgvector:latest
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    volumes:
      - pgdata_vector:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - app-network
  app:
    container_name: streamlit_frontend
    build: ../frontend
    command: "streamlit run --server.port 8080 --server.enableCORS false Information.py"
    ports:
      - "8080:8080"
    networks:
      - app-network
  fastapi:
    build: .
    volumes:
      - ./:/myapp/
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: "${DATABASE_URL}"
      OPENAI_API_KEY : "${OPENAI_API_KEY}"
      DATABASE_URL2: "${DATABASE_URL2}"
      collection_name: "${collection_name}"
      SECRET_KEY: "${SECRET_KEY}"
      ADMIN_USER: "${ADMIN_USER}"
      ADMIN_PASSWORD: "${ADMIN_PASSWORD}"
      ALGORITHM: "${ALGORITHM}"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network


volumes:
  postgres-data:
  pgadmin-data:
  pgdata_vector:

networks:
  app-network:
